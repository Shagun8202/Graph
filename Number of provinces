class Solution {
public:
void dfs(int node,vector<int>adj[], vector<int>vis ){
    vis[node] = 1;
    for(auto it: adj[node]){
        if(!vis[it]){
            dfs(it,adj,vis);
        }
    }
}
    int findCircleNum(vector<vector<int>>& arr) {
        int n = arr.size();
        vector<int>adj[n+1];
        for(int i=0; i<n; i++){
            for(int j=0; j<n;j++){
                if(arr[i][j]==1 and i!=j){
                    adj[i].push_back(j);
                   // adj[j].push_back(i);
                }
            }
        }
        vector<int>vis(n+1,0);
        int cnt = 0;
        for(int i=1; i<=n;i++){
            if(!vis[i]){
                dfs(i,adj,vis);
                cnt++;
            }
        }
        return cnt;
    }
};
