class Solution {
    private:
   void dfs(int sr,int sc,vector<vector<int>>& image,vector<vector<int>>& ans,int ini,int color)
    {
        ans[sr][sc]=color;
        int n = image.size();
        int m=image[0].size();
        int rc[] = {-1,0,+1,0};
        int cc[] = {0,+1,0,-1};
        for(int i = 0;i<4;i++){
            int nrow= sr+rc[i];
            int ncol= sc+cc[i];
            if(nrow>=0 && nrow<n && ncol<m  && ncol>=0 && ans[nrow][ncol] != color && image[nrow][ncol]==ini){
                dfs(nrow,ncol,image,ans,ini,color);
            }
        }
    }
public:
    vector<vector<int>> floodFill(vector<vector<int>>& image, int sr, int sc, int color) {
       vector<vector<int>> ans = image;
       int ini = image[sr][sc];
       dfs(sr,sc,image,ans,ini,color);
       return ans;
    }
};
